import 'package:flutter/material.dart';

/// Utilities for design palettes and text contrast
List<Color> paletteFromName(String name) {
  // A single cool base color is chosen for each palette. A second shade is
  // generated by slightly darkening the base which keeps the gradient soft and
  // free of warm tones.
  Color base;
  switch (name) {
    case 'midnight':
      base = const Color(0xFF9AAFC7); // muted blue
      break;
    case 'forest':
      base = const Color(0xFFA9D3B0); // soft green
      break;
    case 'ocean':
      base = const Color(0xFF9EC6E5); // light ocean blue
      break;
    case 'purple':
      base = const Color(0xFFD0C1E8); // pastel purple
      break;
    case 'lavender':
      base = const Color(0xFFD6D9F3); // pale lavender
      break;
    case 'steel':
      base = const Color(0xFFB5BBC1); // cool grey
      break;
    default:
      base = const Color(0xFFCAD7E9); // fallback soft blue-grey
      break;
  }
  final hsl = HSLColor.fromColor(base);
  final darker =
      hsl.withLightness((hsl.lightness * 0.85).clamp(0.0, 1.0)).toColor();
  return [base, darker];
}

/// Returns [Colors.white] or [Colors.black] depending on the average
/// brightness of the palette.
Color textColorForPalette(String name) {
  final colors = paletteFromName(name);
  // Average the palette colors
  int r = 0, g = 0, b = 0;
  for (final c in colors) {
    r += c.red;
    g += c.green;
    b += c.blue;
  }
  final avg = Color.fromARGB(255, r ~/ colors.length, g ~/ colors.length, b ~/ colors.length);
  final brightness = ThemeData.estimateBrightnessForColor(avg);
  return brightness == Brightness.dark ? Colors.white : Colors.black;
}
